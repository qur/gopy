// Code generated by gen_types. DO NOT EDIT.

package py

// #include "utils.h"
import "C"

import (
	"unsafe"
)

type Long struct {
	abstractObject
	o C.PyLongObject
}

// LongType is the Type object that represents the Long type.
var LongType = (*Type)(unsafe.Pointer(&C.PyLong_Type))

func longCheck(obj Object) bool {
	if obj == nil {
		return false
	}
	return C.longCheck(c(obj)) != 0
}

func newLong(obj *C.PyObject) *Long {
	return (*Long)(unsafe.Pointer(obj))
}







/*
nb_absolute = true
nb_add = true
nb_and = true
nb_bool = true
nb_divmod = true
nb_float = true
nb_floor_divide = true
nb_index = true
nb_int = true
nb_invert = true
nb_lshift = true
nb_multiply = true
nb_negative = true
nb_or = true
nb_positive = true
nb_power = true
nb_remainder = true
nb_rshift = true
nb_subtract = true
nb_true_divide = true
nb_xor = true
ob_base = true
tp_as_number = true
tp_basicsize = true
tp_doc = true
tp_flags = true
tp_free = true
tp_getattro = true
tp_getset = true
tp_hash = true
tp_itemsize = true
tp_methods = true
tp_name = true
tp_new = true
tp_repr = true
tp_richcompare = true
*/

