// Code generated by gen_slots.py. DO NOT EDIT.

#ifndef _GO_PYTHON_CLASS_SLOTS_H_
#define _GO_PYTHON_CLASS_SLOTS_H_

#include <ffi.h>
#include <python3.11/Python.h>
#include <python3.11/frameobject.h>

// ===============================================================

#define CLASS_HAS_TP_REPR 0x0000000000000001ull
#define CLASS_HAS_TP_HASH 0x0000000000000002ull
#define CLASS_HAS_TP_CALL 0x0000000000000004ull
#define CLASS_HAS_TP_STR 0x0000000000000008ull
#define CLASS_HAS_TP_GETATTRO 0x0000000000000010ull
#define CLASS_HAS_TP_SETATTRO 0x0000000000000020ull
#define CLASS_HAS_TP_ITER 0x0000000000000040ull
#define CLASS_HAS_TP_ITERNEXT 0x0000000000000080ull
#define CLASS_HAS_TP_DESCR_GET 0x0000000000000100ull
#define CLASS_HAS_TP_DESCR_SET 0x0000000000000200ull
#define CLASS_HAS_TP_INIT 0x0000000000000400ull
#define CLASS_HAS_TP 0x00000000000007ffull

#define CLASS_HAS_AM_AWAIT 0x0000000000000800ull
#define CLASS_HAS_AM_AITER 0x0000000000001000ull
#define CLASS_HAS_AM_ANEXT 0x0000000000002000ull
#define CLASS_HAS_AM 0x0000000000003800ull

#define CLASS_HAS_NB_ADD 0x0000000000004000ull
#define CLASS_HAS_NB_INPLACE_ADD 0x0000000000008000ull
#define CLASS_HAS_NB_SUBTRACT 0x0000000000010000ull
#define CLASS_HAS_NB_INPLACE_SUBTRACT 0x0000000000020000ull
#define CLASS_HAS_NB_MULTIPLY 0x0000000000040000ull
#define CLASS_HAS_NB_INPLACE_MULTIPLY 0x0000000000080000ull
#define CLASS_HAS_NB_REMAINDER 0x0000000000100000ull
#define CLASS_HAS_NB_INPLACE_REMAINDER 0x0000000000200000ull
#define CLASS_HAS_NB_DIVMOD 0x0000000000400000ull
#define CLASS_HAS_NB_POWER 0x0000000000800000ull
#define CLASS_HAS_NB_INPLACE_POWER 0x0000000001000000ull
#define CLASS_HAS_NB_NEGATIVE 0x0000000002000000ull
#define CLASS_HAS_NB_POSITIVE 0x0000000004000000ull
#define CLASS_HAS_NB_ABSOLUTE 0x0000000008000000ull
#define CLASS_HAS_NB_BOOL 0x0000000010000000ull
#define CLASS_HAS_NB_INVERT 0x0000000020000000ull
#define CLASS_HAS_NB_LSHIFT 0x0000000040000000ull
#define CLASS_HAS_NB_INPLACE_LSHIFT 0x0000000080000000ull
#define CLASS_HAS_NB_RSHIFT 0x0000000100000000ull
#define CLASS_HAS_NB_INPLACE_RSHIFT 0x0000000200000000ull
#define CLASS_HAS_NB_AND 0x0000000400000000ull
#define CLASS_HAS_NB_INPLACE_AND 0x0000000800000000ull
#define CLASS_HAS_NB_XOR 0x0000001000000000ull
#define CLASS_HAS_NB_INPLACE_XOR 0x0000002000000000ull
#define CLASS_HAS_NB_OR 0x0000004000000000ull
#define CLASS_HAS_NB_INPLACE_OR 0x0000008000000000ull
#define CLASS_HAS_NB_INT 0x0000010000000000ull
#define CLASS_HAS_NB_FLOAT 0x0000020000000000ull
#define CLASS_HAS_NB_FLOOR_DIVIDE 0x0000040000000000ull
#define CLASS_HAS_NB_INPLACE_FLOOR_DIVIDE 0x0000080000000000ull
#define CLASS_HAS_NB_TRUE_DIVIDE 0x0000100000000000ull
#define CLASS_HAS_NB_INPLACE_TRUE_DIVIDE 0x0000200000000000ull
#define CLASS_HAS_NB_INDEX 0x0000400000000000ull
#define CLASS_HAS_NB_MATRIX_MULTIPLY 0x0000800000000000ull
#define CLASS_HAS_NB_INPLACE_MATRIX_MULTIPLY 0x0001000000000000ull
#define CLASS_HAS_NB 0x0001ffffffffc000ull

#define CLASS_HAS_MP_LENGTH 0x0002000000000000ull
#define CLASS_HAS_MP_SUBSCRIPT 0x0004000000000000ull
#define CLASS_HAS_MP_ASS_SUBSCRIPT 0x0008000000000000ull
#define CLASS_HAS_MP 0x000e000000000000ull

#define CLASS_HAS_SQ_LENGTH 0x0010000000000000ull
#define CLASS_HAS_SQ_CONCAT 0x0020000000000000ull
#define CLASS_HAS_SQ_REPEAT 0x0040000000000000ull
#define CLASS_HAS_SQ_ITEM 0x0080000000000000ull
#define CLASS_HAS_SQ_ASS_ITEM 0x0100000000000000ull
#define CLASS_HAS_SQ_CONTAINS 0x0200000000000000ull
#define CLASS_HAS_SQ_INPLACE_CONCAT 0x0400000000000000ull
#define CLASS_HAS_SQ_INPLACE_REPEAT 0x0800000000000000ull
#define CLASS_HAS_SQ 0x0ff0000000000000ull

#define CLASS_HAS_BF_GETBUFFER 0x1000000000000000ull
#define CLASS_HAS_BF_RELEASEBUFFER 0x2000000000000000ull
#define CLASS_HAS_BF 0x3000000000000000ull

// ===============================================================
// ===============================================================

typedef struct {
  // Protective NULL pointer
  void *zero;

  // The concrete Methods structs for the protocols (PyTypeObjects only store
  // a pointer).
  PyAsyncMethods am_meth;
  PyNumberMethods nb_meth;
  PyMappingMethods mp_meth;
  PySequenceMethods sq_meth;
  PyBufferProcs bf_meth;
} ClassContext;

// ===============================================================
// ===============================================================

extern ClassContext *setSlots(PyTypeObject *type, uint64_t slotFlags);

// ===============================================================

#endif /* _GO_PYTHON_CLASS_SLOTS_H */
