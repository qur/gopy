// Code generated by gen_types. DO NOT EDIT.

package py

// #include "utils.h"
import "C"

import (
	"unsafe"
)

type Set struct {
	abstractObject
	o C.PySetObject
}

// SetType is the Type object that represents the Set type.
var SetType = (*Type)(unsafe.Pointer(&C.PySet_Type))

func setCheck(obj Object) bool {
	if obj == nil {
		return false
	}
	return C.setCheck(c(obj)) != 0
}

func newSet(obj *C.PyObject) *Set {
	return (*Set)(unsafe.Pointer(obj))
}

func (s *Set) Size() int {
	ret := C.PyObject_Size(c(s))
	if ret < 0 {
		return 0
	}
	return int(ret)
}





/*
nb_and = true
nb_inplace_and = true
nb_inplace_or = true
nb_inplace_subtract = true
nb_inplace_xor = true
nb_or = true
nb_subtract = true
nb_xor = true
ob_base = true
sq_contains = true
sq_length = true
tp_alloc = true
tp_as_number = true
tp_as_sequence = true
tp_basicsize = true
tp_clear = true
tp_dealloc = true
tp_doc = true
tp_flags = true
tp_free = true
tp_getattro = true
tp_hash = true
tp_init = true
tp_iter = true
tp_methods = true
tp_name = true
tp_new = true
tp_repr = true
tp_richcompare = true
tp_traverse = true
tp_vectorcall = true
tp_weaklistoffset = true
*/

