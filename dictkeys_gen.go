// Code generated by gen_types. DO NOT EDIT.

package py

// #include "utils.h"
import "C"

import (
	"unsafe"
)

type DictKeys struct {
	abstractObject
	o C.PyDictKeysObject
}

// DictKeysType is the Type object that represents the DictKeys type.
var DictKeysType = (*Type)(unsafe.Pointer(&C.PyDictKeys_Type))

func dictKeysCheck(obj Object) bool {
	if obj == nil {
		return false
	}
	return C.dictKeysCheck(c(obj)) != 0
}

func newDictKeys(obj *C.PyObject) *DictKeys {
	return (*DictKeys)(unsafe.Pointer(obj))
}

func (d *DictKeys) Size() int {
	ret := C.PyObject_Size(c(d))
	if ret < 0 {
		return 0
	}
	return int(ret)
}





/*
nb_and = true
nb_or = true
nb_subtract = true
nb_xor = true
ob_base = true
sq_contains = true
sq_length = true
tp_as_number = true
tp_as_sequence = true
tp_basicsize = true
tp_dealloc = true
tp_flags = true
tp_getattro = true
tp_getset = true
tp_iter = true
tp_methods = true
tp_name = true
tp_repr = true
tp_richcompare = true
tp_traverse = true
*/

