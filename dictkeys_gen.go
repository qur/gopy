// Code generated by gen_types. DO NOT EDIT.

package py

// #include "utils.h"
import "C"

import (
	"unsafe"
)

// DictKeys represents objects of the DictKeysType (or PyDictKeysType
// in the Python API) type.
type DictKeys struct {
	abstractObject
	o C.PyDictKeysObject
}

// DictKeysType is the Type object that represents the DictKeys type.
var DictKeysType = (*Type)(unsafe.Pointer(&C.PyDictKeys_Type))

func dictKeysCheck(obj Object) bool {
	if obj == nil {
		return false
	}
	return C.dictKeysCheck(c(obj)) != 0
}

func newDictKeys(obj *C.PyObject) *DictKeys {
	return (*DictKeys)(unsafe.Pointer(obj))
}

func (d *DictKeys) Size() int {
	ret := C.PyObject_Size(c(d))
	if ret < 0 {
		return 0
	}
	return int(ret)
}



/*
set fields:
  nb_and
  nb_or
  nb_subtract
  nb_xor
  ob_base
  sq_contains
  sq_length
  tp_as_number
  tp_as_sequence
  tp_basicsize
  tp_dealloc
  tp_flags
  tp_getattro
  tp_getset
  tp_iter
  tp_methods
  tp_name
  tp_repr
  tp_richcompare
  tp_traverse
*/

