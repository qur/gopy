// Code generated by gen_types. DO NOT EDIT.

package py

// #include "utils.h"
import "C"

import (
	"unsafe"
)

type Type struct {
	abstractObject
	o C.PyTypeObject
}

// TypeType is the Type object that represents the Type type.
var TypeType = (*Type)(unsafe.Pointer(&C.PyType_Type))

func typeCheck(obj Object) bool {
	if obj == nil {
		return false
	}
	return C.typeCheck(c(obj)) != 0
}

func newType(obj *C.PyObject) *Type {
	return (*Type)(unsafe.Pointer(obj))
}







/*
nb_or = true
ob_base = true
tp_as_number = true
tp_basicsize = true
tp_call = true
tp_clear = true
tp_dealloc = true
tp_dictoffset = true
tp_doc = true
tp_flags = true
tp_free = true
tp_getattro = true
tp_getset = true
tp_init = true
tp_is_gc = true
tp_itemsize = true
tp_members = true
tp_methods = true
tp_name = true
tp_new = true
tp_repr = true
tp_setattro = true
tp_traverse = true
tp_vectorcall = true
tp_vectorcall_offset = true
tp_weaklistoffset = true
*/

