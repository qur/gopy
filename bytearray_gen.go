// Code generated by gen_types. DO NOT EDIT.

package py

// #include "utils.h"
import "C"

import (
	"unsafe"
)

type ByteArray struct {
	abstractObject
	o C.PyByteArrayObject
}

// ByteArrayType is the Type object that represents the ByteArray type.
var ByteArrayType = (*Type)(unsafe.Pointer(&C.PyByteArray_Type))

func byteArrayCheck(obj Object) bool {
	if obj == nil {
		return false
	}
	return C.byteArrayCheck(c(obj)) != 0
}

func newByteArray(obj *C.PyObject) *ByteArray {
	return (*ByteArray)(unsafe.Pointer(obj))
}

func (b *ByteArray) Size() int {
	ret := C.PyObject_Size(c(b))
	if ret < 0 {
		return 0
	}
	return int(ret)
}

func (b *ByteArray) GetItemString(key string) (Object, error) {
	cKey := C.CString(key)
	defer C.free(unsafe.Pointer(cKey))
	ret := C.PyMapping_GetItemString(c(b), cKey)
	return obj2ObjErr(ret)
}

func (b *ByteArray) HasKey(key Object) bool {
	ret := C.PyMapping_HasKey(c(b), c(key))
	return ret > 0
}

func (b *ByteArray) HasKeyString(key string) bool {
	cKey := C.CString(key)
	defer C.free(unsafe.Pointer(cKey))
	ret := C.PyMapping_HasKeyString(c(b), cKey)
	return ret > 0
}

func (b *ByteArray) DelItem(key Object) error {
	ret := C.PyObject_DelItem(c(b), c(key))
	return int2Err(ret)
}

func (b *ByteArray) DelItemString(key string) error {
	cKey := C.CString(key)
	defer C.free(unsafe.Pointer(cKey))
	ret := C.PyObject_DelItemString(c(b), cKey)
	return int2Err(ret)
}

func (b *ByteArray) SetItemString(key string, v Object) error {
	cKey := C.CString(key)
	defer C.free(unsafe.Pointer(cKey))
	ret := C.PyMapping_SetItemString(c(b), cKey, c(v))
	return int2Err(ret)
}

/*
bf_getbuffer = true
bf_releasebuffer = true
mp_ass_subscript = true
mp_length = true
mp_subscript = true
nb_remainder = true
ob_base = true
sq_ass_item = true
sq_concat = true
sq_contains = true
sq_inplace_concat = true
sq_inplace_repeat = true
sq_item = true
sq_length = true
sq_repeat = true
tp_alloc = true
tp_as_buffer = true
tp_as_mapping = true
tp_as_number = true
tp_as_sequence = true
tp_basicsize = true
tp_dealloc = true
tp_doc = true
tp_flags = true
tp_free = true
tp_getattro = true
tp_init = true
tp_iter = true
tp_methods = true
tp_name = true
tp_new = true
tp_repr = true
tp_richcompare = true
tp_str = true
*/

